# AJY+ - A skeleton WordPress theme

This is my current take on a blank WordPress theme as a base for theme development. While it's
rather specific to my needs and tastes, I'm putting it up here in case it's useful for someone else.

## PHP stuff and templates

The templates (header.php, index.php, etc) are mainly from the [Underscores](http://underscores.me)
theme, although I've done some simplifying and tweaks that fit my workflow a bit better. I've
learned a lot from taking apart the Underscores theme.

## Functions

The functions.php file does include some init-related functions and enqueues styles and scripts. For
more functions, see the /inc directory which includes separate files for:

* shortcodes
    * Including a shortcode to replace the default WP gallery with a Zurb Foundation Clearing
      gallery
* a few template tags
* cleaning up the `<head>`
* registering widget areas

Again, much of this is adapted from Underscores.

## JS

Javascript is enqueued in functions.php. The main file right now is /js/ajy.js

## CSS

CSS is autogenerated from the SCSS (Sass). So you'll need to have some Ruby gems installed:

* sass
* compass (using some mixins, especially clearfix.)
* autoprefixer (auto-insert vendor prefixes on CSS3 properties)
* csso (optional; for compressing CSS after running it through autoprefixer)
* zurb-foundation (see below)

Edit the SCSS files in /scss; the CSS will be output to /css.

In the /scss folder, you'll find some stuff:

* style.scss is the only one that's compiled to a CSS file; the rest are partials. It is mainly a
  "table of contents".
* _ajy-settings.scss is the home of project-wide settings and should be your first stop. It's
  pre-filled with some very pretty colors from the [Base16 Ocean
  colorscheme](http://chriskempson.github.io/base16/#ocean).
* reset/_normalize.scss is a lightly customized Normalize reset file.
* font-awesome/ contains all the Font Awesome partials so you can just write in your font icons
  without needing to do any extra work. See below.
* layouts/ contains partials for the header, footer, content, and navigation styles. Of these, there
  is actually a main navigation menu developed with basic styling. "small" screens (the breakpoint
  is 600px) will get a "left push" menu adapted from here:
  <http://tympanus.net/Blueprints/SlidePushMenus/>. Larger screens will get a typical menu with
  dropdowns and flyouts. There are some nav-related settings variables in _ajy-settings.scss that I
  need to go over and update.
* components/
    * _grid.scss - mixins for a basic grid.
    * _screen-readers.scss - for text meant only for screen readers
    * _social-icons.scss - I have a social media icon sprite included in the /graphics folder. This
      file explains how to use it in your code.
    * _typography.scss - basic typography styles
    * _wordpress.scss - styles for:
        * images
        * forms and submit buttons
        * Galleries using the Clearing plugin from Foundation

## Zurb Foundation

I use some Foundation components and have tried to implement it modularly. For example, I'm not a
big fan of the grid system - it seems overly complicated to me - but I use the Orbit carousel fairly
often.

Foundation is sandboxed in the /foundation directory. This makes it easy to upgrade when you get a
new version of the zurb-foundation gem:

    cd /path/to/theme/foundation
    compass install -r zurb-foundation foundation

This will overwrite any changes you make in the foundation folder. So I don't make any changes in
that directory and I don't include the Foundation settings file in my style.scss.

### Including a Foundation component

1. Go to functions.php and make sure you have uncommented the necessary javascript file in the
   enqueue section.
2. Go to /scss/style.scss and uncomment the correct @import line
3. Go to /scss/_ajy-settings.scss and find the "include-html-classes" section. Change the entry to
   "true" for your component.
4. Keep /scss/_ajy-settings.scss open and go to /foundation/sass/_settings.scss. Find the settings
   block for your component and copy it into /scss/_ajy-settings.scss. This is so you don't wipe
   your settings when you upgrade the Foundation gem.
5. Write the correct javascript in /js/ajy.js according to the Foundation javascript documentation.

This should do it. Write your styles, Foundation @includes, etc. as you wish.

## Font Awesome

It's in here. I need to upgrade it probably. The Sass partials are all included and the font files
are as well. It's referenced in some code for navigation and a couple other things but is not in
there much at this point. It's available though.

## Have fun

OK, that's it for this. It's got a lot in there but it makes my projects quicker and easier. You may
prefer a more minimalist approach, but if you use this I hope you find it enjoyable.
